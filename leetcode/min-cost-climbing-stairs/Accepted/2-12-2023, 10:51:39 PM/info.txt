{"id":896748770,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676231499,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/896748770/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"13.9 MB","code":"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        vector<int> dp;\n        int n = cost.size();\n        dp.resize(n+1);\n        cost.resize(n + 1);\n        cost[n] = 0;\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        int ans = 0;\n        //ans += min(dp[0], dp[1]);\n        for (int i = 2; i <= n; i++) {\n            dp[i] = min(dp[i-1] + cost[i], dp[i-2] + cost[i]);\n        }\n        ans = dp[n];\n        // int ans = 0;\n        // int i = cost.size();\n        // // cout << i;\n        // while (i >= 2) {\n        //     if (cost[i-1] < cost[i-2]){\n        //         ans += cost[i-1];\n        //         i--;\n        //     } else if (cost[i-1] >= cost[i-2]) {\n        //         ans += cost[i-2];\n        //         i -= 2;\n        //     }\n        // }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}