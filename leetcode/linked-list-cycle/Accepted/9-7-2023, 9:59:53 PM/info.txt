{"id":1043310771,"lang":"cpp","lang_name":"C++","time":"5 days, 18 hours","timestamp":1694113193,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1043310771/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"10.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if (!head) return false;\n        unordered_set<ListNode*> nodes;\n        while (head -> next) {\n            if (nodes.find(head) == nodes.end()) nodes.insert(head);\n            else return true; \n            head = head -> next;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}