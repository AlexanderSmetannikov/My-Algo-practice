{"id":1043308743,"lang":"cpp","lang_name":"C++","time":"5 days, 18 hours","timestamp":1694113030,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1043308743/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        unordered_map<ListNode*, bool> nodes;\n        while (head -> next) {\n            if (nodes.find(head) == nodes.end()) nodes.insert({head, true});\n            else return true; \n            head = head -> next;\n        }\n        return false;\n    }\n};","compare_result":"11100000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}