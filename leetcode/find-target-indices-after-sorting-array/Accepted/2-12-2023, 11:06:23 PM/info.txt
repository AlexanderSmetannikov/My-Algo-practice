{"id":896754727,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676232383,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/896754727/","is_pending":"Not Pending","title":"Find Target Indices After Sorting Array","memory":"11.6 MB","code":"class Solution {\npublic:\n    int partition(vector<int> &values, int left, int right) {\n    int pivotIndex = left + (right - left) / 2;\n    int pivotValue = values[pivotIndex];\n    int i = left, j = right;\n    int temp;\n    while(i <= j) {\n        while(values[i] < pivotValue) {\n            i++;\n        }\n        while(values[j] > pivotValue) {\n            j--;\n        }\n        if(i <= j) {\n            temp = values[i];\n            values[i] = values[j];\n            values[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n    void quicksort(vector<int> &values, int left, int right) {\n    if(left < right) {\n        int pivotIndex = partition(values, left, right);\n        quicksort(values, left, pivotIndex - 1);\n        quicksort(values, pivotIndex, right);\n    }\n}\n   vector<int> targetIndices(vector<int>& nums, int target) {\n        vector<int> ans;\n        quicksort(nums, 0, nums.size() - 1);\n        for(int i = 0; i < nums.size(); i++) {\n            if (nums[i] == target) ans.push_back(i);\n        }\n       return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-target-indices-after-sorting-array","has_notes":false,"flag_type":1}