{"id":1025240892,"lang":"rust","lang_name":"Rust","time":"3 weeks, 4 days","timestamp":1692396394,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1025240892/","is_pending":"Not Pending","title":"Binary Search","memory":"2.2 MB","code":"impl Solution {\n    pub fn search(nums: Vec<i32>, target: i32) -> i32 {\n        let mut l: usize = 0;\n        let mut r: usize = nums.len() - 1;\n        let mut mid: usize = l + (r - l) / 2;\n        while l < r {\n            mid = l + (r - l) / 2;\n            if nums[mid] == target { return mid as i32; }\n            if target > nums[mid] {l = mid + 1;}\n            else {r = mid;}\n        }\n        if nums[r] == target {r as i32} else {-1 as i32}\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false,"flag_type":1}