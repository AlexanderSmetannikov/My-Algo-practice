{"id":896750952,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676231820,"status":10,"status_display":"Accepted","runtime":"1700 ms","url":"/submissions/detail/896750952/","is_pending":"Not Pending","title":"Single Number III","memory":"10.2 MB","code":"class Solution {\npublic:\n    bool contain(vector<int>& nums, int n) {\n        for (int i = 0; i < nums.size(); i++) {\n            if(n == nums[i]) return true;\n        }\n        return false;\n    }\n    \n    vector<int> singleNumber(vector<int>& nums) {\n        vector<int> ans;\n        vector<int> duplicates;\n        bool flag = false;\n        for (int i = 0; i < nums.size(); i++) {\n            for (int j = i + 1; j < nums.size(); j++) {\n                if (nums[i] == nums[j]) {\n                    duplicates.push_back(nums[i]);\n                    flag  = true;                    \n                    break;\n                } else flag = false;\n            }\n        }\n        for (int i = 0;  i < nums.size(); i++) {\n            if(!contain(duplicates, nums[i])) ans.push_back(nums[i]);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"single-number-iii","has_notes":false,"flag_type":1}