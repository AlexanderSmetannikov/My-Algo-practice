{"id":1043299120,"lang":"cpp","lang_name":"C++","time":"5 days, 18 hours","timestamp":1694112275,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1043299120/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        TreeNode* ptr = root;\n        while (true) {\n            if ( (ptr -> val) > (p -> val) && (ptr -> val) > (q -> val) ) ptr = ptr -> left;\n            else if ( (ptr -> val) < (p -> val) && (ptr -> val) < (q -> val) ) ptr  = ptr -> right;\n            else break;\n        }\n        return ptr;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}