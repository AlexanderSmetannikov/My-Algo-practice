{"id":1043395936,"lang":"cpp","lang_name":"C++","time":"5 days, 15 hours","timestamp":1694121339,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1043395936/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int getHeight(TreeNode* &node) {\n        if (node == nullptr) return 0;\n        int left = getHeight(node -> left);\n        if (left == -1) return -1;\n        int right = getHeight(node -> right);\n        if (right == -1) return -1;\n        if (abs(left-right) > 1) return -1;\n\n        return max(left, right) + 1;\n    }\n    bool isBalanced(TreeNode* root) {\n        return getHeight(root) != -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}