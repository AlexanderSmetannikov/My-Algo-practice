{"id":1044052297,"lang":"cpp","lang_name":"C++","time":"4 days, 20 hours","timestamp":1694190695,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1044052297/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int loc_d(TreeNode* &root) {\n        int ans = 0;\n\n        while (root && root -> left) {\n            ans++;\n            root -> left = root -> left -> left;\n        }\n        while (root && root -> right) {\n            ans++;\n            root -> right = root -> right -> right;\n        }\n        // return max(max(ans, loc_d(root -> left)), loc_d(root -> right));\n        return ans;\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        if (!root) return 0;\n        int ans = 0;\n        // while()\n        return loc_d(root);\n    }\n};","compare_result":"11111100111100100001001111100101000000100100000000000000100001001001111111111100000100000000100000000000","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}