{"id":1043785882,"lang":"cpp","lang_name":"C++","time":"5Â days, 3Â hours","timestamp":1694166014,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1043785882/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (!head) return nullptr;\n\n        ListNode* current = head;\n        ListNode* prev = nullptr;\n\n        while (current != nullptr) {\n            ListNode* fw = current -> next;\n            current -> next = prev;\n            prev = current;\n\n            current = fw;\n        }\n\n        return prev;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}