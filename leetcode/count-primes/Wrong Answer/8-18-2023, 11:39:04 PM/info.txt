{"id":1025199019,"lang":"rust","lang_name":"Rust","time":"3 weeks, 4 days","timestamp":1692391144,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1025199019/","is_pending":"Not Pending","title":"Count Primes","memory":"N/A","code":"impl Solution {\n    pub fn count_primes(n: i32) -> i32 {\n        if n <= 2 { return 0; }\n        let mut primes: Vec<bool> = vec![true; n as usize];\n\n        for i in 2..(f64::sqrt(n as f64) as usize) {\n            if primes[i] {\n                let mut j = i * i;\n                while j < n as usize {\n                    primes[j] = false;\n                    j += i;\n                }\n            }\n        }\n\n        let mut ans = 0;\n        for i in 2..(n - 1) as usize {\n            if primes[i] {\n                ans += 1;\n            }\n        }\n        ans\n    }\n}\n","compare_result":"111100110010101011110011111101101111110111111110110110011111101111","title_slug":"count-primes","has_notes":false,"flag_type":1}