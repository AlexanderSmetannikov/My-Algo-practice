{"id":1041672201,"lang":"cpp","lang_name":"C++","time":"1Â week","timestamp":1693958455,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1041672201/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void invert(TreeNode* root) {\n        if (!root) return;\n        TreeNode* temp = root -> left;\n        root -> left = root -> right;\n        root -> right = temp;\n        invert(root -> left);\n        invert(root -> right);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        invert(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}