{"id":917097144,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1679088402,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/917097144/","is_pending":"Not Pending","title":"Count Square Submatrices with All Ones","memory":"N/A","code":"class Solution {\npublic:\n\n    bool is_square_all_one(vector<vector<int>>& matr, int x, int y, int side) {\n        int n = matr.size();\n        int m = matr[0].size();\n        if (x + side < n && y + side < m) {\n            for (int i = x; i <= x + side; i++) {\n                for (int j = y; j <= y + side; j++) {\n                    if (matr[i][j] == 0) return false;\n                }\n            }\n        } else return false;\n        return true;\n    }\n\n    void update(vector<vector<int>>& matr, int x, int y, int side) {\n        for (int i = x; i < x + side; i++) {\n            for (int j = y; j < y + side; j++) {\n                matr[i][j]++;\n            }\n        }\n    }\n\n    void grow(vector<vector<int>>& matr) {\n        int side;\n        int n = matr.size();\n        int m = matr[0].size();\n            side = 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                while (is_square_all_one(matr, i, j, side)) {\n                    // cout << i << \" \" << j << \" \" << side << endl;\n                    update(matr, i, j, side);\n                    side++;\n                }\n            }\n        }\n    }\n    int countSquares(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        int ans = 0;\n        grow(matrix);\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                ans += matrix[i][j];\n            }\n        }\n        // return !(ans % 2) ? ans / 2 : ans / 2 + 1;\n        return ans;\n    }\n};","compare_result":"11111111110111111101110000000000","title_slug":"count-square-submatrices-with-all-ones","has_notes":false,"flag_type":1}