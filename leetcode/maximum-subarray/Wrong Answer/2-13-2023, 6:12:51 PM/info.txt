{"id":897248108,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676301171,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/897248108/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n         int max = 0;\n         int max_2 = 0;\n         int n = nums.size();\n         vector<int> dp(n);\n         dp[0] = nums[0];\n         for (int i = 1; i < n; i++) {\n            dp[i] = dp[i-1] + nums[i];\n            if(dp[i] > max) {\n                // cout << dp[i] << \" \" << nums[i]; \n                max_2 = max;\n                max = i;\n            }\n         }\n        //  cout << max_2 << \" \" << max;\n         int res = 0;\n        //  for (int i = max_2; i <= max; i++) res += nums[i];\n         for (int i = 0; i < n; i++) cout << dp[i] << \" \";\n         return res;\n    }\n};","compare_result":"000100001000100000000100000100000000000000000110000101000000010001000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}