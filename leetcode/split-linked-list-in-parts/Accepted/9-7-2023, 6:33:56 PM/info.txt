{"id":1043139893,"lang":"cpp","lang_name":"C++","time":"5 days, 21 hours","timestamp":1694100836,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1043139893/","is_pending":"Not Pending","title":"Split Linked List in Parts","memory":"9.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<ListNode*> splitListToParts(ListNode* head, int k) {\n        vector<ListNode*> ans;\n        int len = 0;\n        ListNode* iter = head;\n        while (iter) {\n            len++;\n            iter = iter -> next;\n        }\n        if (k > len) {\n            k -= len;\n            while (len--) {\n                ListNode *ptr = new ListNode(head -> val);\n                ans.push_back(ptr);\n                head = head -> next;\n            }\n            while (k--) ans.push_back(nullptr);\n        } else {\n            int slice = len / k;\n            int more = len % k;\n            printf(\"%d %d\", slice, more);\n            k -= more;\n            while (more--) {\n                ListNode *new_slice = new ListNode(head -> val);\n                ListNode *ptr = new_slice;\n                head = head -> next;\n                for (int j = 0; j < slice; j++) {\n                    ptr -> next = new ListNode(head -> val);\n                    head = head -> next;\n                    ptr = ptr -> next;\n                }\n                ans.push_back(new_slice);\n            }\n            while (k--) {\n                ListNode *new_slice = new ListNode(head -> val);\n                ListNode *ptr = new_slice;\n                head = head -> next;\n                for (int j = 0; j < slice - 1; j++) {\n                    ptr -> next = new ListNode(head -> val);\n                    head = head -> next;\n                    ptr = ptr -> next;\n                }\n                ans.push_back(new_slice);\n            }\n\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"split-linked-list-in-parts","has_notes":false,"flag_type":1}