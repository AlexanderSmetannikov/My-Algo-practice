{"id":1043965961,"lang":"cpp","lang_name":"C++","time":"4 days, 22 hours","timestamp":1694183633,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1043965961/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    bool isVal(TreeNode* root) {\n        if (!root) return true;\n        \n        if (root -> left && root -> right) {\n            if (!(isVal(root -> right) && isVal(root -> left) && (root -> val > root -> left -> val && root -> val < root -> right -> val))) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    bool isValidBST(TreeNode* root) {\n        if (!root) return true;\n        \n        return isVal(root);\n    }\n};","compare_result":"11111001000100000100111111111111111111111011011000001100100111100001010100111000111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}