{"id":1043981998,"lang":"cpp","lang_name":"C++","time":"4 days, 22 hours","timestamp":1694184939,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1043981998/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\nbool isVal(TreeNode* root, TreeNode* minNode, TreeNode* maxNode) {\n        if (!root) return true;\n\n        if ((minNode && root->val <= minNode->val) || (maxNode && root->val >= maxNode->val)) {\n            return false;\n        }\n\n        return isVal(root->left, minNode, root) && isVal(root->right, root, maxNode);\n    }\n\n    bool isValidBST(TreeNode* root) {\n        if (!root) return true;\n        \n        return isVal(root, nullptr, nullptr);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}