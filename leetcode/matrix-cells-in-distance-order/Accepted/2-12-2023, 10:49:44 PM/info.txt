{"id":896747980,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676231384,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/896747980/","is_pending":"Not Pending","title":"Matrix Cells in Distance Order","memory":"16.3 MB","code":"class Solution {\npublic:\n    void put(int R, int C, int r, int c, vector<vector<int>>& res) {\n        if (r>=0 && r < R && c>=0 && c<C ) {\n            res.push_back({r,c});\n        }\n    }\n    vector<vector<int>> allCellsDistOrder(int R, int C, int r0, int c0) {\n        int n =  R+C-2;\n        vector<vector<int>> result;\n        result.push_back({r0,c0});\n        for(int i=1; i<= n; i++) {\n            // from (r0-i, c0) to (r0, c0+i)\n            for(int r=r0-i,c=c0;r!=r0; r++, c++)  put (R, C, r ,c, result);\n\n            // from  (r0, c0+i) to (r0+i, c0)\n            for(int r=r0, c=c0+i; c!=c0; r++, c-- ) put (R, C, r, c, result);\n\n            // from (r0+i, c0) to (r0, c0-i)\n            for (int r=r0+i, c=c0; r!=r0; r--, c--) put (R, C, r, c, result);\n\n            // from (r0, c0-i) to (r0-i, c0)\n            for (int r=r0, c=c0-i; c!=c0; r--, c++) put (R, C, r, c, result);\n        }\n\n        return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matrix-cells-in-distance-order","has_notes":false,"flag_type":1}