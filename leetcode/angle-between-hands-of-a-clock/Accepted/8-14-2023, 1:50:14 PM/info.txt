{"id":1021017420,"lang":"rust","lang_name":"Rust","time":"1Â month","timestamp":1692010214,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1021017420/","is_pending":"Not Pending","title":"Angle Between Hands of a Clock","memory":"2.2 MB","code":"impl Solution {\n    pub fn angle_clock(hour: i32, minutes: i32) -> f64 {\n        let h: f64 = 30. * hour as f64 + 0.5 * minutes as f64;\n        let m: f64 = 6. * minutes as f64;\n        let diff: f64 = (h - m).abs();\n        if diff <= 180. {diff} else {360. - diff}\n    }\n}\n\n\n// H_place = 30*hour + 0.5*minutes\n// M_place = 6*minutes\n// diff = abs(H_place - M_place)\n// return diff if diff <= 180 else 360 - diff","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"angle-between-hands-of-a-clock","has_notes":false,"flag_type":1}